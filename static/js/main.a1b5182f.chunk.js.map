{"version":3,"sources":["HomePage/index.js","HomePage/HomePage.js","FilmsPage/index.js","FilmsPage/FilmsPage.js","api/_helper.js","api/people.js","Common/Pagination/index.js","Common/Pagination/Pagination.js","PeoplePage/index.js","PeoplePage/PeoplePage.js","CategoryPage/index.js","CategoryPage/CategoryPage.js","App.js","index.js"],"names":["HomePage","react_default","a","createElement","className","FilmsPage","get","url","arguments","length","undefined","fetch","then","response","json","getAll","_ref","_ref$page","page","_ref$search","search","urlParams","URLSearchParams","set","concat","toString","Pagination","withRouter","location","count","_ref$perPage","perPage","pagesCount","Math","ceil","pages","i","push","getSearchWithPage","map","Link","key","to","pathname","PeoplePage","state","isLoaded","people","loadPeople","_callee","_ref2","regenerator_default","wrap","_context","prev","next","_this","peopleApi","sent","results","setState","stop","this","updatePageFromURL","props","_this$state","Fragment","Common_Pagination","person","name","React","Component","CategoryPage","match","JSON","stringify","params","category","allowedCategories","App","NavLink","Switch","Route","exact","path","component","join","render","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a1b5182f.chunk.js","sourcesContent":["import HomePage from './HomePage';\nexport default HomePage;\n","import React from 'react';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <h1>Home page</h1>\n  </div>\n);\n\nexport default HomePage;\n","import FilmsPage from './FilmsPage';\nexport default FilmsPage;\n","import React from 'react';\n\nconst FilmsPage = () => (\n  <div className=\"FilmsPage\">\n    <h1>Films page</h1>\n  </div>\n);\n\nexport default FilmsPage;\n","const BASE_API_URL = 'https://swapi.co/api';\n\nexport const get = (url, params = {}) => {\n  return fetch(BASE_API_URL + url)\n    .then(response => response.json())\n};\n","import { get } from './_helper';\n\nexport const getAll = ({ page = 1, search = 'e' }) => {\n  const urlParams = new URLSearchParams();\n\n  urlParams.set('page', page);\n  urlParams.set('search', search);\n\n  return get(`/people?${urlParams.toString()}`);\n};\n\nexport const getById = (personId) => {\n  return get(`/people/${personId}`);\n};\n","import Pagination from './Pagination';\nexport default Pagination;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ location, count, page = 1, perPage = 10 }) => {\n\n  const pagesCount = Math.ceil(count / perPage);\n  const pages = [];\n\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i + 1);\n  }\n\n  const getSearchWithPage = (page) => {\n    const urlParams = new URLSearchParams(location.search);\n\n    urlParams.set('page', page);\n\n    return urlParams.toString();\n  };\n\n  return (\n    <div className=\"Pagination\">\n      {pages.map(page => (\n        <Link\n          key={page}\n          to={{\n            pathname: location.pathname,\n            search: getSearchWithPage(page),\n          }}\n        >\n          {page}\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n};\n\nexport default withRouter(Pagination);\n","import PeoplePage from './PeoplePage';\nexport default PeoplePage;\n","import React from 'react';\n\nimport * as peopleApi from '../api/people';\nimport Pagination from '../Common/Pagination'\n\nclass PeoplePage extends React.Component {\n  state = {\n    isLoaded: false,\n    page: 1,\n    count: 0,\n    people: [],\n  };\n\n  componentDidMount() {\n    this.updatePageFromURL();\n  }\n\n  componentDidUpdate() {\n    this.updatePageFromURL();\n  }\n\n  updatePageFromURL() {\n    const { location } = this.props;\n    const urlParams = new URLSearchParams(location.search);\n    const page = +urlParams.get('page') || 1;\n\n    if (page === this.state.page) {\n      return;\n    }\n\n    this.setState({ page }, this.loadPeople);\n  }\n\n  loadPeople = async () => {\n    const { page } = this.state;\n    const { count, results: people } = await peopleApi.getAll({ page });\n\n    this.setState({\n      people,\n      count,\n      isLoaded: true,\n    });\n  };\n\n  render() {\n    const { people, isLoaded, count, page } = this.state;\n\n    return (\n      <div className=\"PeoplePage\">\n        <h1>People page</h1>\n\n        { isLoaded ? (\n          <>\n            <Pagination count={count} page={page} />\n            <ul>\n              { people.map(person => (\n                <li key={person.name}>{person.name}</li>\n              ))}\n            </ul>\n          </>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PeoplePage;\n","import CategoryPage from './CategoryPage';\nexport default CategoryPage;\n","import React from 'react';\n\nconst CategoryPage = ({ match }) => (\n  <div className=\"CategoryPage\">\n    <h1>Category page {JSON.stringify(match.params.category)}</h1>\n  </div>\n);\n\nexport default CategoryPage;\n","import React, { Component } from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './HomePage';\nimport FilmsPage from './FilmsPage';\nimport PeoplePage from './PeoplePage';\nimport CategoryPage from './CategoryPage';\n\nimport './App.css';\n\nconst allowedCategories = [\n  'people', 'films', 'starships'\n];\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Star Wars</h1>\n        <NavLink to=\"/\" >Home</NavLink>\n        <NavLink to=\"/films\">Films</NavLink>\n        <NavLink to=\"/people\">People</NavLink>\n\n        <section>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/films\" component={FilmsPage} />\n            <Route exact path=\"/people\" component={PeoplePage} />\n            <Route exact path={`/:category(${ allowedCategories.join('|') })`} component={CategoryPage} />\n            <Route render={() => <h1>Page not found</h1>}/>\n          </Switch>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}